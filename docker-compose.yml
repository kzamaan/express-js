version: "3.8"
services:
    # MongoDB
    mongo:
        image: mongo
        container_name: mongo-database
        ports:
            - "27017:27017"
        networks:
            - express-network
        volumes:
            - mongo_data:/data/db
    elasticsearch:
        image: elasticsearch:7.9.2
        container_name: elasticsearch
        environment:
            - discovery.type=single-node
        ports:
            - "9200:9200"
        networks:
            - express-network
        volumes:
        - elasticsearch_data:/usr/share/elasticsearch/data
    kibana:
        image: kibana:7.9.2
        container_name: kibana
        ports:
            - "5601:5601"
        networks:
            - express-network
        volumes:
            - kibana_data:/usr/share/kibana/data
    # Express App
    express-app:
        build: .
        networks:
            - express-network
        volumes:
            - ./:/app # if Read only mode sue :ro
            - /app/node_modules # node_modules will be created in the container
        environment:
            - PORT=8000
            - NODE_ENV=development
            - APP_NAME=Express App
            - APP_URL=http://localhost:8000
            - MONGO_URI=mongodb://mongo:27017/express
            - COOKIE_SECRET=7c4a8d09ca3762af61e59520943dc26494f8941b
            - JWT_SECRET=AIRS2ihzUZ7RA4l5BcoGJo22phO/Gi7PHrF+P22g6c0
            - JWT_EXPIRY=86400000
            - COOKIE_NAME=_refresh_token
        depends_on:
            - mongo

    # Nginx Server
    nginx-server:
        image: nginx:alpine
        restart: unless-stopped
        ports:
            - "8000:80"
        volumes:
            - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
        networks:
            - express-network
        depends_on:
            - express-app

# Networks
networks:
    express-network:
        driver: bridge

# Volumes
volumes:
    mongo_data: ~
    elasticsearch_data: ~
    kibana_data: ~
